{"version":3,"sources":["styles/addNewTaskStyle.module.scss","styles/NavBar.module.scss","styles/login.module.scss","styles/signUp.module.scss","styles/noPage.module.scss","styles/AllTasks.module.scss","components/AddNewTask.js","components/NavBar.js","components/AllTasks.js","components/NoPage.js","components/LogIn.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NewTaskForm","useState","taskTitle","setTaskTitle","details","setDetails","dateToDo","setdateToDo","randomPhrase","setPhrase","inputStyle","setInputStyle","inputTitle","useRef","inputDetails","clearInput","addToList","e","a","Date","toDateString","date","Axios","post","moment","format","createDate","userEmail","window","localStorage","getItem","rnd","Math","floor","random","get","res","phrase","data","text","randPhrase","onInputChange","backgroundColor","color","className","styles","mainContainer","cardContainer","phraseContainer","htmlFor","onKeyPress","key","current","focus","handleEnter","ref","type","style","id","placeholder","value","onChange","target","onClick","autoComplete","required","rows","btnContainer","button","backToAll","to","NavBar","location","useLocation","navigate","useNavigate","userLog","setUserLog","animeLog","useEffect","Lottie","loadAnimation","container","animationData","LottieOnLog","renderer","loop","autoplay","console","log","pathname","onLogin","gifContainer","onSignUp","logOutContainer","exact","logOutBtn","clear","noPage","AllTasks","taskList","setTaskList","setUpdateDescription","updateID","setUpdateID","userName","setUserName","checkedTask","setCheckTask","userMail","checkFromStorage","split","getUserName","createTaskList","setUpdatedTask","email","axios","userData","tasks","deleteOp","task","arr","filter","el","delete","updateTask","put","tasksContainer","headerStyle","length","map","liContainer","titleContainer","taskCheckbox","name","includes","push","removeItem","setItem","checkBoxHandler","defaultChecked","title","descriptionContainer","defaultValue","description","onSave","_id","descriptionField","whiteSpace","height","deleteTask","addTaskFooter","NoPage","anime","gif","Login","setEmail","password","setPassword","rememberMeCheck","setRememberMeCheck","wrongInput","setWrongInputDislay","showPassword","setShowPassword","onSubmit","preventDefault","resData","inputContainer","display","for","eyeIcon","checked","btn","btnSignUp","SignUp","userPassword","userExist","setUserExist","user","newUser","form","inputField","maxLength","renderWarning","href","App","index","element","path","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3691ba5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"addNewTaskStyle_mainContainer__9G3U0\",\"cardContainer\":\"addNewTaskStyle_cardContainer__1RvOG\",\"inputStyle\":\"addNewTaskStyle_inputStyle__1bQJF\",\"btnContainer\":\"addNewTaskStyle_btnContainer__1KOwV\",\"button\":\"addNewTaskStyle_button__1GekC\",\"phraseContainer\":\"addNewTaskStyle_phraseContainer__2YcFP\",\"noTitle\":\"addNewTaskStyle_noTitle__35_3F\",\"backToAll\":\"addNewTaskStyle_backToAll__3rE5B\",\"title\":\"addNewTaskStyle_title__1_CVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"onSignUp\":\"NavBar_onSignUp__3XaeF\",\"gifContainer\":\"NavBar_gifContainer__2c4r-\",\"logOutContainer\":\"NavBar_logOutContainer__2Y4O8\",\"logOutBtn\":\"NavBar_logOutBtn__22leK\",\"noPage\":\"NavBar_noPage__3RD3y\",\"onLogin\":\"NavBar_onLogin__yybKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"login_inputContainer__KkZAw\",\"eyeIcon\":\"login_eyeIcon__3A50Y\",\"btn\":\"login_btn__ZBEA_\",\"btnSignUp\":\"login_btnSignUp__f0Zue\",\"rememberMeCheck\":\"login_rememberMeCheck__1vZx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"signUp_form__7H39D\",\"btn\":\"signUp_btn__1Xz4w\",\"inputField\":\"signUp_inputField__U-Zk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"noPage_container__osoS8\",\"gif\":\"noPage_gif__3y3Tn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"AllTasks_mainContainer__1_Qm7\",\"tasksContainer\":\"AllTasks_tasksContainer__1ehbu\",\"headerStyle\":\"AllTasks_headerStyle__2tfM2\",\"liContainer\":\"AllTasks_liContainer__2O_cP\",\"titleContainer\":\"AllTasks_titleContainer__3bR6y\",\"taskTitle\":\"AllTasks_taskTitle__lbXOy\",\"taskCheckbox\":\"AllTasks_taskCheckbox__jOUCj\",\"deleteTask\":\"AllTasks_deleteTask__3-jw6\",\"userName\":\"AllTasks_userName__yR_29\",\"addTaskFooter\":\"AllTasks_addTaskFooter__3lmzk\",\"descriptionContainer\":\"AllTasks_descriptionContainer__2wurC\",\"descriptionField\":\"AllTasks_descriptionField__mP-YL\"};","import React, { useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport styles from \"../styles/addNewTaskStyle.module.scss\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport { AiOutlineCheck } from \"react-icons/ai\";\nimport { MdClear } from \"react-icons/md\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport { NavLink } from \"react-router-dom\";\n\nexport function NewTaskForm() {\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [details, setDetails] = useState(\"\");\n    const [dateToDo, setdateToDo] = useState();\n    const [randomPhrase, setPhrase] = useState(\"\");\n    const [inputStyle, setInputStyle] = useState({});\n    const inputTitle = useRef(null);\n    const inputDetails = useRef(null);\n\n    const clearInput = () => {\n        setTaskTitle(\"\");\n        setDetails(\"\");\n        setdateToDo();\n    };\n\n    const addToList = async (e) => {\n        if (!taskTitle && !details) {\n            // alert('please add desc or title');\n        } else {\n            const date = await new Date().toDateString();\n            await Axios.post(\"https://exchangeappback.herokuapp.com/addtask\", {\n                taskTitle: taskTitle,\n                details: details,\n                dateToDo: moment(dateToDo).format(\"MMMM DD, YYYY\"),\n                createDate: date,\n                userEmail: window.localStorage.getItem(\"email\"),\n            });\n            clearInput();\n        }\n    };\n\n    const randPhrase = async () => {\n        if (!randomPhrase) {\n            const rnd = Math.floor(Math.random() * 6) + 1;\n            const res = await Axios.get(\"https://exchangeappback.herokuapp.com/newtask\");\n            const phrase = res.data[rnd].text;\n            setPhrase(phrase);\n        }\n    };\n    randPhrase();\n\n    const onInputChange = (e) => {\n        setInputStyle({ backgroundColor: \"rgba(255, 241, 230, 0.158)\", color: \"white\" });\n    };\n\n    const handleEnter = (e) => {\n        if (e.key === \"Enter\") {\n            inputDetails.current.focus();\n        }\n    };\n\n    return (\n        <div className={styles.mainContainer}>\n            <div className={`card ${styles.cardContainer}`}>\n                <p className={`${styles.phraseContainer}`}>{randomPhrase}</p>\n\n                <label htmlFor=\"title\">Title:</label>\n                <input\n                    onKeyPress={(e) => handleEnter(e)}\n                    ref={inputTitle}\n                    type=\"text\"\n                    className={`form-control ${styles.inputStyle}`}\n                    style={inputStyle}\n                    id=\"title\"\n                    placeholder=\"\"\n                    value={taskTitle}\n                    onChange={(e) => {\n                        setTaskTitle(e.target.value);\n                    }}\n                    onClick={onInputChange}\n                    autoComplete=\"off\"\n                    required={true}\n                />\n\n                <label htmlFor=\"details\">Details:</label>\n                <textarea\n                    className={`form-control ${styles.inputStyle}`}\n                    ref={inputDetails}\n                    id=\"details\"\n                    rows=\"3\"\n                    value={details}\n                    style={inputStyle}\n                    onChange={(e) => {\n                        setDetails(e.target.value);\n                    }}\n                    onClick={onInputChange}\n                    autoComplete=\"off\"\n                ></textarea>\n                <label>Date:</label>\n                <input\n                    type=\"date\"\n                    className={`form-control ${styles.inputStyle}`}\n                    value={dateToDo}\n                    style={inputStyle}\n                    onChange={(e) => {\n                        setdateToDo(e.target.value);\n                    }}\n                    onClick={onInputChange}\n                />\n\n                <div className={styles.btnContainer}>\n                    <div type=\"button\" className={styles.button} onClick={() => addToList()}>\n                        <AiOutlineCheck />\n                    </div>\n                    <div className={styles.button} onClick={clearInput}>\n                        <MdClear />\n                    </div>\n                </div>\n            </div>\n            <div className={styles.backToAll}>\n                <NavLink to=\"/alltasks\">\n                    {\" \"}\n                    <BsArrowLeft /> ALL\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect,useRef } from \"react\";\nimport styles from \"../styles/NavBar.module.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { AiOutlineLogout } from \"react-icons/ai\";\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Lottie from \"lottie-web\";\nimport LottieOnLog from '../styles/img/login-anime.json'\n\nexport function NavBar() {\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const [userLog, setUserLog] = useState(true);\n    const animeLog = useRef(null);\n\n    useEffect(() => {\n      Lottie.loadAnimation({\n        container: animeLog.current,\n        animationData: LottieOnLog,\n        renderer: \"svg\", \n        loop: true, \n        autoplay: true, \n      });\n        localStorage.getItem(\"email\") ? setUserLog(true) : setUserLog(false);\n        console.log(\"Location changed \" + location.pathname);\n    }, [location]);\n\n    const logOut = () => {\n        if (!localStorage.getItem(\"rememberMeCheck\")) {\n            window.localStorage.clear();\n        }\n        setUserLog(false);\n    };\n\n    if (location.pathname === \"/login\" || location.pathname === \"/\") {\n        return (\n            <div className={styles.onLogin}>\n                <p>Log In</p>\n                <div className={styles.gifContainer} ref={animeLog}></div>\n            </div>\n        );\n    } else if (location.pathname === \"/signup\") {\n        return (\n            <div className={styles.onSignUp}>\n                <div>Create your account </div>\n            </div>\n        );\n    }else if(location.pathname === \"/alltasks\" || location.pathname === \"/newtask\"){  \n      return (\n            <div className={styles.logOutContainer}>\n                <NavLink exact=\"true\" to=\"/login\" className={styles.logOutBtn} onClick={() => logOut()}>\n                    {\" \"}\n                    {userLog ? <AiOutlineLogout /> : \"Login\"}\n                </NavLink>\n            </div>\n        );\n    }\n     else {\n      return (\n        <div className={styles.noPage}>\n            <div  onClick={() => navigate(-1)} className={styles.logOutBtn}>\n            <BsArrowLeft/>\n            </div>\n        </div>\n    );\n      \n    }\n}\n","import React, { useState, useEffect,useRef } from \"react\";\nimport Axios from \"axios\";\nimport styles from \"../styles/AllTasks.module.scss\";\nimport { EditTextarea } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\nimport axios from \"axios\";\nimport { GrAdd } from \"react-icons/gr\";\nimport { NavLink } from \"react-router-dom\";\n\n\n\nexport function AllTasks() {\n    let [taskList, setTaskList] = useState([]);\n    const [details, setUpdateDescription] = useState();\n    const [updateID, setUpdateID] = useState();\n    const [userName, setUserName] = useState(\"\");\n    const [checkedTask, setCheckTask] = useState([]);\n    const userMail = window.localStorage.getItem(\"email\");\n     const anime = useRef(null);\n     \n    useEffect(() => {\n       const checkFromStorage = localStorage.getItem('checkedTasks');\n       checkFromStorage && setCheckTask(checkFromStorage.split(','));\n        getUserName(userMail);\n        if (userMail) {\n            createTaskList();\n            updateID && setUpdatedTask(updateID);\n        }\n    }, [details]);\n\n    const getUserName = async (email) => {\n        const userData = await axios.get(`https://exchangeappback.herokuapp.com/username?email=${email}`);\n        setUserName(userData.data);\n    };\n    const createTaskList = async () => {\n        const tasks = await Axios.get(`https://exchangeappback.herokuapp.com/alltasks?email=${userMail}`);\n        setTaskList(tasks.data);\n    };\n\n    const deleteOp = async (e,id) => {\n        const task = e.target.id;\n         let arr = checkedTask.filter(el => el !== task);\n        setCheckTask(arr);\n        console.log(id);\n        await Axios.delete(`https://exchangeappback.herokuapp.com/deletetask/${id}/${userMail}`);\n        createTaskList();\n    };\n\n    const updateTask = async (e, id) => {\n        setUpdateDescription(e.value);\n        setUpdateID(id);\n        console.log(details, updateID);\n    };\n\n    const setUpdatedTask = async (id) => {\n        await Axios.put(`https://exchangeappback.herokuapp.com/updatetask/${id}`, {\n            details: details,\n        });\n    };\n\n    const checkBoxHandler = (el) => {\n        const task = el.target.id;\n        let arr = checkedTask;\n        if(!arr.includes(task)){\n            console.log('not includes ' + task);\n            arr.push(task);\n            \n        }else{\n             arr = arr.filter(el => el !== task);\n            setCheckTask(arr);\n         \n        }\n        console.log(arr,arr.length)\n        arr.length === 0 ? localStorage.removeItem('checkedTasks') : localStorage.setItem('checkedTasks', arr);\n    }\n    return (\n        <div className={styles.mainContainer}>\n            <div className={`container ${styles.tasksContainer}`}>\n                <div className={styles.userName}> {userName}</div>\n\n                <h1 className={styles.headerStyle}>You have {taskList.length} tasks</h1>\n                {taskList.map((el, key) => {\n                    return (\n                        <div id={key} key={key} className={`${styles.liContainer}`}>\n                            <li className={`row ${styles.titleContainer}`}>\n                                <input className={styles.taskCheckbox} id={`custom-checkbox-${key}`} type=\"checkbox\" name={el.key} ref={el.key} onChange={e=>checkBoxHandler(e)} defaultChecked={checkedTask.includes(`custom-checkbox-${key}`) ? true : false}> \n                                </input>\n                                <p className={styles.taskTitle}>\n                                    {el.title}\n                                </p>\n                            </li>\n                          <div className={styles.descriptionContainer}><EditTextarea rows={2} name=\"textbox1\" defaultValue={el.description} onSave={(e) => updateTask(e, el._id)} className={styles.descriptionField} style={{whiteSpace: \"initial\", height: \"fit-content\"}}/></div>\n                            <small className={styles.dateToDo}>{el.dateToDo}</small>\n                            <br></br>\n                            <small onClick={(e) => deleteOp(e,el._id)}  className={styles.deleteTask}> Delete</small>{\" \"}\n                        </div>\n                    );\n                })}\n            </div>\n            <div className={styles.addTaskFooter}>\n                <NavLink exact=\"true\" to=\"/newtask\">\n                    Add task <GrAdd />\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n","import React, {useEffect, useRef} from \"react\";\nimport { BsEmojiFrown} from 'react-icons/bs';\nimport styles from '../styles/noPage.module.scss';\nimport Lottie from \"lottie-web\";\nimport animationData from '../styles/img/page-not-found.json';\n\nexport default function NoPage () {\n   const anime = useRef(null);\n   useEffect(()=>{\n    Lottie.loadAnimation({\n        container: anime.current,\n        animationData: animationData,\n        renderer: \"svg\", // \"canvas\", \"html\"\n        loop: true, // boolean\n        autoplay: true, // boolean\n      });\n   },[])\n\n\n    return(\n        <div className={styles.container}>\n        <div>Page not found <BsEmojiFrown/></div>\n        <div ref={anime} className={styles.gif}></div>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaRegEye } from \"react-icons/fa\";\nimport { FaRegEyeSlash } from \"react-icons/fa\";\nimport styles from \"../styles/login.module.scss\";\n\nimport axios from \"axios\";\n\nexport function Login() {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [rememberMeCheck, setRememberMeCheck] = useState(false);\n    const [wrongInput, setWrongInputDislay] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"rememberMeCheck\")) {\n            setPassword(localStorage.getItem(\"password\"));\n            setEmail(localStorage.getItem(\"email\"));\n        }\n\n        console.log(localStorage.getItem(\"rememberMeCheck\"));\n    }, []);\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const resData = await axios.post(\"https://exchangeappback.herokuapp.com/login\", {\n            email,\n            password,\n        });\n\n        console.log(resData);\n        if (resData.data === \"User does not exist\") {\n            console.log(\"error: user does not exist\");\n            setWrongInputDislay(true);\n        } else {\n            window.localStorage.setItem(\"email\", resData.data.email);\n            setWrongInputDislay(false);\n            if (rememberMeCheck) {\n                localStorage.setItem(\"password\", resData.data.password);\n                localStorage.setItem(\"rememberMeCheck\", rememberMeCheck);\n            }\n            navigate(\"/alltasks\");\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <div className={styles.inputContainer}>\n                    <label>Email</label>\n                    <input\n                        value={email}\n                        type=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Enter email\"\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    />\n                    <small style={{ color: \"red\", display: wrongInput ? \"block\" : \"none\" }}>Check your Email</small>\n                </div>\n\n                <div className={styles.inputContainer}>\n                    <label for=\"passwod\">Password</label>\n                    <input\n                        id=\"password\"\n                        value={password}\n                        type={showPassword ? \"text\" : \"password\"}\n                        className={`form-control`}\n                        placeholder=\"Enter password\"\n                        onChange={(e) => {\n                            setPassword(e.target.value);\n                        }}\n                    ></input>\n                    <span className={styles.eyeIcon} onClick={(e) => setShowPassword(!showPassword)}>\n                        {showPassword ? <FaRegEye /> : <FaRegEyeSlash />}\n                    </span>\n                    <small style={{ color: \"red\", display: wrongInput ? \"block\" : \"none\" }}>Check your Password</small>\n                </div>\n\n                <div className={styles.rememberMeCheck}>\n                    <div className=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" checked={rememberMeCheck} onChange={(e) => setRememberMeCheck(!rememberMeCheck)} />\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n                            Remember me\n                        </label>\n                    </div>\n                </div>\n\n                <button type=\"submit\" className={`btn btn-block ${styles.btn}`}>\n                    Submit\n                </button>\n                <p className=\"forgot-password text-right\">\n                </p> \n                <p>Or</p>\n                <button onClick={() => navigate('/signup')} navigate='/signup' className={`btn btn-block ${styles.btnSignUp}`}>\n               Join\n                </button>\n            </form>\n           \n            {/* <div className={styles.createAccBtn}>\n                <p>\n                    <a href=\"/signup\">Create your ToDo Accaunt</a>\n                </p>\n            </div> */}\n        </>\n    );\n}\n","import React, {useState, useEffect, useRef} from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../styles/signUp.module.scss';\n\n\nimport axios from \"axios\";\n\nexport function SignUp () {\n    const navigate = useNavigate();\n   const [userName, setUserName] = useState('');\n   const [userEmail, setEmail] = useState('');\n   const [userPassword, setPassword] = useState('');\n   const [userExist, setUserExist] = useState();\n\n\n\n   \n   const onSubmit = async (e) => {\n       e.preventDefault();\n      const newUser =  await axios.post(\"https://exchangeappback.herokuapp.com/signup\", {\n          user: userName,\n          password: userPassword,\n          email: userEmail\n      }); \n\n         console.log(newUser.data);\n       \n      if(newUser.data === 'userExist'){ \n         setUserExist(true);\n      }else {\n          setUserExist(false);\n          window.localStorage.clear();   \n\n          navigate('/login');\n        };\n   \n     \n   }\n   \n   const renderWarning = () => {\n    if(userExist){\n        return <p style={{color: 'red'}}>Email already in use, use another or login</p>\n    }\n   }\n\n\n\n    return(      \n        <div>\n        <form className={styles.form}>\n        <div className={`form-group ${styles.inputField}`}>\n            <label>User name</label>\n            <input maxLength={10} type=\"text\" className=\"form-control\" placeholder=\"User name\" onChange={(e) => {setUserName(e.target.value)}}/>\n        </div>\n        <div className={`form-group ${styles.inputField}`}>\n            <label>Email address</label>\n            <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={(e) => {setEmail(e.target.value)}}/>\n            {renderWarning()}\n        </div>\n\n        <div className={`form-group ${styles.inputField}`}>\n            <label>Password</label>\n            <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={(e) => {setPassword(e.target.value)}}/>\n        </div>\n\n        <button type=\"submit\" className={`btn ${styles.btn}`} onClick={(e) => onSubmit(e)}>Sign Up</button>\n        <p className=\"forgot-password text-right\">\n            Already have account?  <a href=\"/login\">LOGIN</a>\n        </p> \n\n    </form>\n    </div>\n    )\n     \n}","import './App.css';\nimport React from 'react';\nimport { NewTaskForm } from './components/AddNewTask';\nimport {NavBar} from './components/NavBar';\nimport {AllTasks} from './components/AllTasks';\nimport NoPage from './components/NoPage';\n\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { Login } from './components/LogIn';\nimport { SignUp } from './components/SignUp';\n\n\n// in react v6 <Switch> is  replaced with <Routes>!!!\n\nclass App extends React.Component{\n\n render(){\n   return ( \n     <>\n           <NavBar/>\n     <Routes>  \n         <Route index element={<Login/>} exact path=\"/\" />\n         <Route path='/ToDoAppFront/newtask'  element={<NewTaskForm/>}/>\n         <Route path='/ToDoAppFront/alltasks' element={<AllTasks/>}/>\n         <Route path='/ToDoAppFront/login' element={<Login/>}/>\n         <Route path='/ToDoAppFront/signup' element={<SignUp/>}/>\n         \n         <Route path=\"/ToDoAppFront/*\" element={<NoPage />} />\n       </Routes>   \n       </>\n        )\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\n\nReactDOM.render( \n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}